[package]
name = "hierarchical_hash_wheel_timer"
version = "0.1.0"
authors = ["Lars Kroll <bathtor@googlemail.com>"]
edition = "2018"
description = "A low-level timer implementantion using a hierarchical four-level hash wheel with overflow."
documentation = "https://docs.rs/hierarchical_hash_wheel_timer"
homepage = "https://github.com/Bathtor/rust-hash-wheel-timer"
repository = "https://github.com/Bathtor/rust-hash-wheel-timer"
readme = "README.md"
keywords = ["timer", "timeout"]
categories = ["data-structures", "simulation"]
license = "MIT"

[features]
default = ["uuid-extras", "fx-hash"]
uuid-extras = ["uuid"]
# The following three features are mutually exclusive and you have to pick exactly one of them!

# Use Rust's default Sip Hasher for cancellable timers
sip-hash = []
# Use the fnv crate to supply the Hasher for cancellable timers
fnv-hash = ["fnv"]
# Use the rustc-hash crate to supply the FxHasher for cancellable timers
fx-hash = ["rustc-hash"]

[dependencies]
uuid = { version = "0.8", features = ["v4"] , optional = true}
arr_macro = "0.1"
fnv = { version = "1.0", optional = true}
rustc-hash = {version = "1.1", optional = true}

#[dev-dependencies]
#uuid = { version = "0.8", features = ["v4"] }

[badges]
# Maintenance: `status` is required Available options are `actively-developed`,
# `passively-maintained`, `as-is`, `none`, `experimental`, `looking-for-maintainer`
# and `deprecated`.
maintenance = { status = "actively-developed" }

travis-ci = { repository = "Bathtor/rust-hash-wheel-timer", branch = "master" }

[dev-dependencies]
criterion = "0.3"
rand = "0.7"
rand_xoshiro = "0.4"

[[bench]]
name = "wheel_benchmark"
harness = false
